image: alpine:latest

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ''
  STAGING_API_URL: "https://staging.web-api.violetear.proxmox-1.schmilblick.org"
  PRODUCTION_API_URL: "https://production.web-api.violetear.proxmox-1.schmilblick.org"

stages:
  - bootstrap
  - build
  - test
  - build_docker_image
  - deploy

build:
  stage: build
  image: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:build
  script:
    - ls -lGha
    - CARGO_HOME="$(pwd)/cargo_home" cargo web deploy --release
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cargo_home/
      - target/
  artifacts:
    paths:
      - target/deploy/

build_docker_image:
  stage: build_docker_image
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image/master:stable"
  services:
    - docker:stable-dind
  script:
    - |
      if [[ "$CI_COMMIT_REF_SLUG" == "staging" ]]; then
        sed -i "s#%API_URL%#$STAGING_API_URL#" target/deploy/config.example.json
      elif [[ "$CI_COMMIT_REF_SLUG" == "production" ]]; then
        sed -i "s#%API_URL%#$PRODUCTION_API_URL#" target/deploy/config.example.json
      fi
    - mv target/deploy/config.example.json target/deploy/config.json
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build --tag "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG" .
    - docker push "$CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"
  only:
    - branches
    - tags
  dependencies:
    - build

test:
  stage: test
  image: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:build
  script:
    - CARGO_HOME="$(pwd)/cargo_home" cargo web test --release
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - cargo_home/
      - target/
  dependencies:
    - build

staging:
  stage: deploy
  image: fedora # Because it has curl
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - curl --data "name=staging-client&port=5002&image=${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}&token=${DEPLOY_TOKEN}&image_port=80&" ${DEPLOY_ENDPOINT}
  only:
    - staging
  environment:
    name: staging
    url: https://staging.web-client.violetear.proxmox-1.schmilblick.org

production:
  stage: deploy
  image: fedora # Because it has curl
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - curl --data "name=production-client&port=5003&image=${CI_APPLICATION_REPOSITORY}:${CI_APPLICATION_TAG}&token=${DEPLOY_TOKEN}&image_port=80&" ${DEPLOY_ENDPOINT}
  only:
    - production
  environment:
    name: production
    url: https://production.web-client.violetear.proxmox-1.schmilblick.org

bootstrap:
  image: docker:stable
  stage: bootstrap
  services:
    - docker:stable-dind
  script:
    - ./build_bootstrap.sh
  only:
    - schedules